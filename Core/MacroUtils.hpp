/**
 * @ Author: Matthieu Moinvaziri
 * @ Description: A set of macro helpers
 */

#pragma once

// Stringify
#define _STRINGIFY(arg) #arg

// Concatenate arguments
#define _CONCATENATE(arg1, arg2) _CONCATENATE1(arg1, arg2) // Call the _CONCATENATE1 to expend potential macro arguments
#define _CONCATENATE1(arg1, arg2) arg1##arg2
#define _CONCATENATE_SECOND(arg1, arg2) arg1##arg2 // Second concatenate macro used because the preprocessor expand use the same macro in a recursive expension
#define _CONCATENATE_THIRD(arg1, arg2) arg1##arg2 // Second concatenate macro used because the preprocessor expand use the same macro in a recursive expension
#define _CONCATENATE5(_0, _1, _2, _3, _4) _0 ## _1 ## _2 ## _3 ## _4

// Check if a variadic arguments of 16 or less has a coma (one zero arguments)
#define _HAS_COMMA(...) _ARG16(__VA_ARGS__, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 1, 0)
#define _ARG16(_0, _1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, ...) _63
#define _TRIGGER_PARENTHESIS_(...) ,

// Check if variadic list of arguments is empty
#define IS_EMPTY(...) _IS_EMPTY( \
        /* test if there is just one argument, eventually an empty one */ \
        _HAS_COMMA(__VA_ARGS__), \
        /* test if _TRIGGER_PARENTHESIS_ together with the argument adds a comma */ \
        _HAS_COMMA(_TRIGGER_PARENTHESIS_ __VA_ARGS__), \
        /* test if the argument together with a parenthesis adds a comma */ \
        _HAS_COMMA(__VA_ARGS__ (/*empty*/)), \
        /* test if placing it between _TRIGGER_PARENTHESIS_ and the parenthesis adds a comma */ \
        _HAS_COMMA(_TRIGGER_PARENTHESIS_ __VA_ARGS__ (/*empty*/)) \
    )
#define _IS_EMPTY(_0, _1, _2, _3) _HAS_COMMA(_CONCATENATE5(_IS_EMPTY_CASE_, _0, _1, _2, _3))
#define _IS_EMPTY_CASE_0001 ,

// Helper to get the number of argument of variadic arguments that are inferior or equal to 16
#define VA_ARGC(...) _VA_ARGC_BRANCH(IS_EMPTY(__VA_ARGS__), __VA_ARGS__)
#define _VA_ARGC_BRANCH(N, ...) _CONCATENATE(_VA_ARGC_BRANCH_, N)(__VA_ARGS__)
#define _VA_ARGC_BRANCH_0(...) _VA_ARGC(__VA_ARGS__, _VA_ARGC_RSEQ_N())
#define _VA_ARGC_BRANCH_1(...) 0
#define _VA_ARGC(...) _VA_ARGC_N(__VA_ARGS__)
#define _VA_ARGC_N(_1, _2, _3, _4, _5, _6, _7, _8, _9, _10, _11, _12, _13, _14, _15, _16, _17, _18, _19, _20, _21, _22, _23, _24, _25, _26, _27, _28, _29, _30, _31, _32, _33, _34, _35, _36, _37, _38, _39, _40, _41, _42, _43, _44, _45, _46, _47, _48, _49, _50, _51, _52, _53, _54, _55, _56, _57, _58, _59, _60, _61, _62, _63, _64, N, ...) N
#define _VA_ARGC_RSEQ_N() 64, 63, 62, 61, 60, 59, 58, 57, 56, 55, 54, 53, 52, 51, 50, 49, 48, 47, 46, 45, 44, 43, 42, 41, 40, 39, 38, 37, 36, 35, 34, 33, 32, 31, 30, 29, 28, 27, 26, 25, 24, 23, 22, 21, 20, 19, 18, 17, 16, 15, 14, 13, 12, 11, 10, 9, 8, 7, 6, 5, 4, 3, 2, 1, 0

// Iterate of up to 16 arguments, applying a functor
#define FOR_EACH(what, ...)         _FOR_EACH(VA_ARGC(__VA_ARGS__), what, __VA_ARGS__)
#define _FOR_EACH(N, what, ...)     _CONCATENATE(_FOR_EACH_, N)(what __VA_OPT__(,) __VA_ARGS__)
#define _FOR_EACH_0(what)
#define _FOR_EACH_1(what, x)        what(x);
#define _FOR_EACH_2(what, x, ...)   what(x); _FOR_EACH_1(what,  __VA_ARGS__)
#define _FOR_EACH_3(what, x, ...)   what(x); _FOR_EACH_2(what,  __VA_ARGS__)
#define _FOR_EACH_4(what, x, ...)   what(x); _FOR_EACH_3(what,  __VA_ARGS__)
#define _FOR_EACH_5(what, x, ...)   what(x); _FOR_EACH_4(what,  __VA_ARGS__)
#define _FOR_EACH_6(what, x, ...)   what(x); _FOR_EACH_5(what,  __VA_ARGS__)
#define _FOR_EACH_7(what, x, ...)   what(x); _FOR_EACH_6(what,  __VA_ARGS__)
#define _FOR_EACH_8(what, x, ...)   what(x); _FOR_EACH_7(what,  __VA_ARGS__)
#define _FOR_EACH_9(what, x, ...)   what(x); _FOR_EACH_8(what,  __VA_ARGS__)
#define _FOR_EACH_10(what, x, ...)  what(x); _FOR_EACH_9(what,  __VA_ARGS__)
#define _FOR_EACH_11(what, x, ...)  what(x); _FOR_EACH_10(what, __VA_ARGS__)
#define _FOR_EACH_12(what, x, ...)  what(x); _FOR_EACH_11(what, __VA_ARGS__)
#define _FOR_EACH_13(what, x, ...)  what(x); _FOR_EACH_12(what, __VA_ARGS__)
#define _FOR_EACH_14(what, x, ...)  what(x); _FOR_EACH_13(what, __VA_ARGS__)
#define _FOR_EACH_15(what, x, ...)  what(x); _FOR_EACH_14(what, __VA_ARGS__)
#define _FOR_EACH_16(what, x, ...)  what(x); _FOR_EACH_15(what, __VA_ARGS__)
#define _FOR_EACH_17(what, x, ...)  what(x); _FOR_EACH_16(what, __VA_ARGS__)
#define _FOR_EACH_18(what, x, ...)  what(x); _FOR_EACH_17(what, __VA_ARGS__)
#define _FOR_EACH_19(what, x, ...)  what(x); _FOR_EACH_18(what, __VA_ARGS__)
#define _FOR_EACH_20(what, x, ...)  what(x); _FOR_EACH_19(what, __VA_ARGS__)
#define _FOR_EACH_21(what, x, ...)  what(x); _FOR_EACH_20(what, __VA_ARGS__)
#define _FOR_EACH_22(what, x, ...)  what(x); _FOR_EACH_21(what, __VA_ARGS__)
#define _FOR_EACH_23(what, x, ...)  what(x); _FOR_EACH_22(what, __VA_ARGS__)
#define _FOR_EACH_24(what, x, ...)  what(x); _FOR_EACH_23(what, __VA_ARGS__)
#define _FOR_EACH_25(what, x, ...)  what(x); _FOR_EACH_24(what, __VA_ARGS__)
#define _FOR_EACH_26(what, x, ...)  what(x); _FOR_EACH_25(what, __VA_ARGS__)
#define _FOR_EACH_27(what, x, ...)  what(x); _FOR_EACH_26(what, __VA_ARGS__)
#define _FOR_EACH_28(what, x, ...)  what(x); _FOR_EACH_27(what, __VA_ARGS__)
#define _FOR_EACH_29(what, x, ...)  what(x); _FOR_EACH_28(what, __VA_ARGS__)
#define _FOR_EACH_30(what, x, ...)  what(x); _FOR_EACH_29(what, __VA_ARGS__)
#define _FOR_EACH_31(what, x, ...)  what(x); _FOR_EACH_30(what, __VA_ARGS__)
#define _FOR_EACH_32(what, x, ...)  what(x); _FOR_EACH_31(what, __VA_ARGS__)
#define _FOR_EACH_33(what, x, ...)  what(x); _FOR_EACH_32(what, __VA_ARGS__)
#define _FOR_EACH_34(what, x, ...)  what(x); _FOR_EACH_33(what, __VA_ARGS__)
#define _FOR_EACH_35(what, x, ...)  what(x); _FOR_EACH_34(what, __VA_ARGS__)
#define _FOR_EACH_36(what, x, ...)  what(x); _FOR_EACH_35(what, __VA_ARGS__)
#define _FOR_EACH_37(what, x, ...)  what(x); _FOR_EACH_36(what, __VA_ARGS__)
#define _FOR_EACH_38(what, x, ...)  what(x); _FOR_EACH_37(what, __VA_ARGS__)
#define _FOR_EACH_39(what, x, ...)  what(x); _FOR_EACH_38(what, __VA_ARGS__)
#define _FOR_EACH_40(what, x, ...)  what(x); _FOR_EACH_39(what, __VA_ARGS__)
#define _FOR_EACH_41(what, x, ...)  what(x); _FOR_EACH_40(what, __VA_ARGS__)
#define _FOR_EACH_42(what, x, ...)  what(x); _FOR_EACH_41(what, __VA_ARGS__)
#define _FOR_EACH_43(what, x, ...)  what(x); _FOR_EACH_42(what, __VA_ARGS__)
#define _FOR_EACH_44(what, x, ...)  what(x); _FOR_EACH_43(what, __VA_ARGS__)
#define _FOR_EACH_45(what, x, ...)  what(x); _FOR_EACH_44(what, __VA_ARGS__)
#define _FOR_EACH_46(what, x, ...)  what(x); _FOR_EACH_45(what, __VA_ARGS__)
#define _FOR_EACH_47(what, x, ...)  what(x); _FOR_EACH_46(what, __VA_ARGS__)
#define _FOR_EACH_48(what, x, ...)  what(x); _FOR_EACH_47(what, __VA_ARGS__)
#define _FOR_EACH_49(what, x, ...)  what(x); _FOR_EACH_48(what, __VA_ARGS__)
#define _FOR_EACH_50(what, x, ...)  what(x); _FOR_EACH_49(what, __VA_ARGS__)
#define _FOR_EACH_51(what, x, ...)  what(x); _FOR_EACH_50(what, __VA_ARGS__)
#define _FOR_EACH_52(what, x, ...)  what(x); _FOR_EACH_51(what, __VA_ARGS__)
#define _FOR_EACH_53(what, x, ...)  what(x); _FOR_EACH_52(what, __VA_ARGS__)
#define _FOR_EACH_54(what, x, ...)  what(x); _FOR_EACH_53(what, __VA_ARGS__)
#define _FOR_EACH_55(what, x, ...)  what(x); _FOR_EACH_54(what, __VA_ARGS__)
#define _FOR_EACH_56(what, x, ...)  what(x); _FOR_EACH_55(what, __VA_ARGS__)
#define _FOR_EACH_57(what, x, ...)  what(x); _FOR_EACH_56(what, __VA_ARGS__)
#define _FOR_EACH_58(what, x, ...)  what(x); _FOR_EACH_57(what, __VA_ARGS__)
#define _FOR_EACH_59(what, x, ...)  what(x); _FOR_EACH_58(what, __VA_ARGS__)
#define _FOR_EACH_60(what, x, ...)  what(x); _FOR_EACH_59(what, __VA_ARGS__)
#define _FOR_EACH_61(what, x, ...)  what(x); _FOR_EACH_60(what, __VA_ARGS__)
#define _FOR_EACH_62(what, x, ...)  what(x); _FOR_EACH_61(what, __VA_ARGS__)
#define _FOR_EACH_63(what, x, ...)  what(x); _FOR_EACH_62(what, __VA_ARGS__)
#define _FOR_EACH_64(what, x, ...)  what(x); _FOR_EACH_63(what, __VA_ARGS__)

// Iterate of up to 16 arguments, applying a functor
#define FOR_COMMA_EACH(what, ...)         _FOR_COMMA_EACH(VA_ARGC(__VA_ARGS__), what, __VA_ARGS__)
#define _FOR_COMMA_EACH(N, what, ...)     _CONCATENATE(_FOR_COMMA_EACH_, N)(what __VA_OPT__(,) __VA_ARGS__)
#define _FOR_COMMA_EACH_0(what)
#define _FOR_COMMA_EACH_1(what, x)        what(x)
#define _FOR_COMMA_EACH_2(what, x, ...)   what(x), _FOR_COMMA_EACH_1(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_3(what, x, ...)   what(x), _FOR_COMMA_EACH_2(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_4(what, x, ...)   what(x), _FOR_COMMA_EACH_3(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_5(what, x, ...)   what(x), _FOR_COMMA_EACH_4(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_6(what, x, ...)   what(x), _FOR_COMMA_EACH_5(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_7(what, x, ...)   what(x), _FOR_COMMA_EACH_6(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_8(what, x, ...)   what(x), _FOR_COMMA_EACH_7(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_9(what, x, ...)   what(x), _FOR_COMMA_EACH_8(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_10(what, x, ...)  what(x), _FOR_COMMA_EACH_9(what,  __VA_ARGS__)
#define _FOR_COMMA_EACH_11(what, x, ...)  what(x), _FOR_COMMA_EACH_10(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_12(what, x, ...)  what(x), _FOR_COMMA_EACH_11(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_13(what, x, ...)  what(x), _FOR_COMMA_EACH_12(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_14(what, x, ...)  what(x), _FOR_COMMA_EACH_13(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_15(what, x, ...)  what(x), _FOR_COMMA_EACH_14(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_16(what, x, ...)  what(x), _FOR_COMMA_EACH_15(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_17(what, x, ...)  what(x), _FOR_COMMA_EACH_16(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_18(what, x, ...)  what(x), _FOR_COMMA_EACH_17(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_19(what, x, ...)  what(x), _FOR_COMMA_EACH_18(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_20(what, x, ...)  what(x), _FOR_COMMA_EACH_19(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_21(what, x, ...)  what(x), _FOR_COMMA_EACH_20(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_22(what, x, ...)  what(x), _FOR_COMMA_EACH_21(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_23(what, x, ...)  what(x), _FOR_COMMA_EACH_22(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_24(what, x, ...)  what(x), _FOR_COMMA_EACH_23(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_25(what, x, ...)  what(x), _FOR_COMMA_EACH_24(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_26(what, x, ...)  what(x), _FOR_COMMA_EACH_25(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_27(what, x, ...)  what(x), _FOR_COMMA_EACH_26(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_28(what, x, ...)  what(x), _FOR_COMMA_EACH_27(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_29(what, x, ...)  what(x), _FOR_COMMA_EACH_28(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_30(what, x, ...)  what(x), _FOR_COMMA_EACH_29(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_31(what, x, ...)  what(x), _FOR_COMMA_EACH_30(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_32(what, x, ...)  what(x), _FOR_COMMA_EACH_31(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_33(what, x, ...)  what(x), _FOR_COMMA_EACH_32(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_34(what, x, ...)  what(x), _FOR_COMMA_EACH_33(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_35(what, x, ...)  what(x), _FOR_COMMA_EACH_34(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_36(what, x, ...)  what(x), _FOR_COMMA_EACH_35(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_37(what, x, ...)  what(x), _FOR_COMMA_EACH_36(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_38(what, x, ...)  what(x), _FOR_COMMA_EACH_37(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_39(what, x, ...)  what(x), _FOR_COMMA_EACH_38(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_40(what, x, ...)  what(x), _FOR_COMMA_EACH_39(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_41(what, x, ...)  what(x), _FOR_COMMA_EACH_40(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_42(what, x, ...)  what(x), _FOR_COMMA_EACH_41(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_43(what, x, ...)  what(x), _FOR_COMMA_EACH_42(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_44(what, x, ...)  what(x), _FOR_COMMA_EACH_43(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_45(what, x, ...)  what(x), _FOR_COMMA_EACH_44(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_46(what, x, ...)  what(x), _FOR_COMMA_EACH_45(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_47(what, x, ...)  what(x), _FOR_COMMA_EACH_46(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_48(what, x, ...)  what(x), _FOR_COMMA_EACH_47(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_49(what, x, ...)  what(x), _FOR_COMMA_EACH_48(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_50(what, x, ...)  what(x), _FOR_COMMA_EACH_49(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_51(what, x, ...)  what(x), _FOR_COMMA_EACH_50(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_52(what, x, ...)  what(x), _FOR_COMMA_EACH_51(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_53(what, x, ...)  what(x), _FOR_COMMA_EACH_52(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_54(what, x, ...)  what(x), _FOR_COMMA_EACH_53(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_55(what, x, ...)  what(x), _FOR_COMMA_EACH_54(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_56(what, x, ...)  what(x), _FOR_COMMA_EACH_55(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_57(what, x, ...)  what(x), _FOR_COMMA_EACH_56(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_58(what, x, ...)  what(x), _FOR_COMMA_EACH_57(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_59(what, x, ...)  what(x), _FOR_COMMA_EACH_58(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_60(what, x, ...)  what(x), _FOR_COMMA_EACH_59(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_61(what, x, ...)  what(x), _FOR_COMMA_EACH_60(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_62(what, x, ...)  what(x), _FOR_COMMA_EACH_61(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_63(what, x, ...)  what(x), _FOR_COMMA_EACH_62(what, __VA_ARGS__)
#define _FOR_COMMA_EACH_64(what, x, ...)  what(x), _FOR_COMMA_EACH_63(what, __VA_ARGS__)

// Automatically give names to a list of up to 16 arguments
#define NAME_EACH(...)              _NAME_EACH(VA_ARGC(__VA_ARGS__), __VA_ARGS__)
#define _NAME_EACH(N, ...)          _CONCATENATE(_NAME_EACH_, N)(__VA_ARGS__)
#define _NAME_EACH_0()
#define _NAME_EACH_1(x)           x arg1
#define _NAME_EACH_2(x, ...)      x arg2,  _NAME_EACH_1(__VA_ARGS__)
#define _NAME_EACH_3(x, ...)      x arg3,  _NAME_EACH_2(__VA_ARGS__)
#define _NAME_EACH_4(x, ...)      x arg4,  _NAME_EACH_3(__VA_ARGS__)
#define _NAME_EACH_5(x, ...)      x arg5,  _NAME_EACH_4(__VA_ARGS__)
#define _NAME_EACH_6(x, ...)      x arg6,  _NAME_EACH_5(__VA_ARGS__)
#define _NAME_EACH_7(x, ...)      x arg7,  _NAME_EACH_6(__VA_ARGS__)
#define _NAME_EACH_8(x, ...)      x arg8,  _NAME_EACH_7(__VA_ARGS__)
#define _NAME_EACH_9(x, ...)      x arg9,  _NAME_EACH_8(__VA_ARGS__)
#define _NAME_EACH_10(x, ...)     x arg10, _NAME_EACH_9(__VA_ARGS__)
#define _NAME_EACH_11(x, ...)     x arg11, _NAME_EACH_10(__VA_ARGS__)
#define _NAME_EACH_12(x, ...)     x arg12, _NAME_EACH_11(__VA_ARGS__)
#define _NAME_EACH_13(x, ...)     x arg13, _NAME_EACH_12(__VA_ARGS__)
#define _NAME_EACH_14(x, ...)     x arg14, _NAME_EACH_13(__VA_ARGS__)
#define _NAME_EACH_15(x, ...)     x arg15, _NAME_EACH_14(__VA_ARGS__)
#define _NAME_EACH_16(x, ...)     x arg16, _NAME_EACH_15(__VA_ARGS__)
#define _NAME_EACH_17(x, ...)     x arg17, _NAME_EACH_16(__VA_ARGS__)
#define _NAME_EACH_18(x, ...)     x arg18, _NAME_EACH_17(__VA_ARGS__)
#define _NAME_EACH_19(x, ...)     x arg19, _NAME_EACH_18(__VA_ARGS__)
#define _NAME_EACH_20(x, ...)     x arg20, _NAME_EACH_19(__VA_ARGS__)
#define _NAME_EACH_21(x, ...)     x arg21, _NAME_EACH_20(__VA_ARGS__)
#define _NAME_EACH_22(x, ...)     x arg22, _NAME_EACH_21(__VA_ARGS__)
#define _NAME_EACH_23(x, ...)     x arg23, _NAME_EACH_22(__VA_ARGS__)
#define _NAME_EACH_24(x, ...)     x arg24, _NAME_EACH_23(__VA_ARGS__)
#define _NAME_EACH_25(x, ...)     x arg25, _NAME_EACH_24(__VA_ARGS__)
#define _NAME_EACH_26(x, ...)     x arg26, _NAME_EACH_25(__VA_ARGS__)
#define _NAME_EACH_27(x, ...)     x arg27, _NAME_EACH_26(__VA_ARGS__)
#define _NAME_EACH_28(x, ...)     x arg28, _NAME_EACH_27(__VA_ARGS__)
#define _NAME_EACH_29(x, ...)     x arg29, _NAME_EACH_28(__VA_ARGS__)
#define _NAME_EACH_30(x, ...)     x arg30, _NAME_EACH_29(__VA_ARGS__)
#define _NAME_EACH_31(x, ...)     x arg31, _NAME_EACH_30(__VA_ARGS__)
#define _NAME_EACH_32(x, ...)     x arg32, _NAME_EACH_31(__VA_ARGS__)
#define _NAME_EACH_33(x, ...)     x arg33, _NAME_EACH_32(__VA_ARGS__)
#define _NAME_EACH_34(x, ...)     x arg34, _NAME_EACH_33(__VA_ARGS__)
#define _NAME_EACH_35(x, ...)     x arg35, _NAME_EACH_34(__VA_ARGS__)
#define _NAME_EACH_36(x, ...)     x arg36, _NAME_EACH_35(__VA_ARGS__)
#define _NAME_EACH_37(x, ...)     x arg37, _NAME_EACH_36(__VA_ARGS__)
#define _NAME_EACH_38(x, ...)     x arg38, _NAME_EACH_37(__VA_ARGS__)
#define _NAME_EACH_39(x, ...)     x arg39, _NAME_EACH_38(__VA_ARGS__)
#define _NAME_EACH_40(x, ...)     x arg40, _NAME_EACH_39(__VA_ARGS__)
#define _NAME_EACH_41(x, ...)     x arg41, _NAME_EACH_40(__VA_ARGS__)
#define _NAME_EACH_42(x, ...)     x arg42, _NAME_EACH_41(__VA_ARGS__)
#define _NAME_EACH_43(x, ...)     x arg43, _NAME_EACH_42(__VA_ARGS__)
#define _NAME_EACH_44(x, ...)     x arg44, _NAME_EACH_43(__VA_ARGS__)
#define _NAME_EACH_45(x, ...)     x arg45, _NAME_EACH_44(__VA_ARGS__)
#define _NAME_EACH_46(x, ...)     x arg46, _NAME_EACH_45(__VA_ARGS__)
#define _NAME_EACH_47(x, ...)     x arg47, _NAME_EACH_46(__VA_ARGS__)
#define _NAME_EACH_48(x, ...)     x arg48, _NAME_EACH_47(__VA_ARGS__)
#define _NAME_EACH_49(x, ...)     x arg49, _NAME_EACH_48(__VA_ARGS__)
#define _NAME_EACH_50(x, ...)     x arg50, _NAME_EACH_49(__VA_ARGS__)
#define _NAME_EACH_51(x, ...)     x arg51, _NAME_EACH_50(__VA_ARGS__)
#define _NAME_EACH_52(x, ...)     x arg52, _NAME_EACH_51(__VA_ARGS__)
#define _NAME_EACH_53(x, ...)     x arg53, _NAME_EACH_52(__VA_ARGS__)
#define _NAME_EACH_54(x, ...)     x arg54, _NAME_EACH_53(__VA_ARGS__)
#define _NAME_EACH_55(x, ...)     x arg55, _NAME_EACH_54(__VA_ARGS__)
#define _NAME_EACH_56(x, ...)     x arg56, _NAME_EACH_55(__VA_ARGS__)
#define _NAME_EACH_57(x, ...)     x arg57, _NAME_EACH_56(__VA_ARGS__)
#define _NAME_EACH_58(x, ...)     x arg58, _NAME_EACH_57(__VA_ARGS__)
#define _NAME_EACH_59(x, ...)     x arg59, _NAME_EACH_58(__VA_ARGS__)
#define _NAME_EACH_60(x, ...)     x arg60, _NAME_EACH_59(__VA_ARGS__)
#define _NAME_EACH_61(x, ...)     x arg61, _NAME_EACH_60(__VA_ARGS__)
#define _NAME_EACH_62(x, ...)     x arg62, _NAME_EACH_61(__VA_ARGS__)
#define _NAME_EACH_63(x, ...)     x arg63, _NAME_EACH_62(__VA_ARGS__)
#define _NAME_EACH_64(x, ...)     x arg64, _NAME_EACH_63(__VA_ARGS__)

// Automatically forward newly generated names of an argument list of up to 16
#define FORWARD_NAME_EACH(...)          _FORWARD_NAME_EACH(VA_ARGC(__VA_ARGS__), __VA_ARGS__)
#define _FORWARD_NAME_EACH(N, ...)      _CONCATENATE(_FORWARD_NAME_EACH_, N)(__VA_ARGS__)
#define _FORWARD_NAME_EACH_0()
#define _FORWARD_NAME_EACH_1(x)         std::forward<x>(arg1)
#define _FORWARD_NAME_EACH_2(x, ...)    std::forward<x>(arg2),  _FORWARD_NAME_EACH_1(__VA_ARGS__)
#define _FORWARD_NAME_EACH_3(x, ...)    std::forward<x>(arg3),  _FORWARD_NAME_EACH_2(__VA_ARGS__)
#define _FORWARD_NAME_EACH_4(x, ...)    std::forward<x>(arg4),  _FORWARD_NAME_EACH_3(__VA_ARGS__)
#define _FORWARD_NAME_EACH_5(x, ...)    std::forward<x>(arg5),  _FORWARD_NAME_EACH_4(__VA_ARGS__)
#define _FORWARD_NAME_EACH_6(x, ...)    std::forward<x>(arg6),  _FORWARD_NAME_EACH_5(__VA_ARGS__)
#define _FORWARD_NAME_EACH_7(x, ...)    std::forward<x>(arg7),  _FORWARD_NAME_EACH_6(__VA_ARGS__)
#define _FORWARD_NAME_EACH_8(x, ...)    std::forward<x>(arg8),  _FORWARD_NAME_EACH_7(__VA_ARGS__)
#define _FORWARD_NAME_EACH_9(x, ...)    std::forward<x>(arg9),  _FORWARD_NAME_EACH_8(__VA_ARGS__)
#define _FORWARD_NAME_EACH_10(x, ...)   std::forward<x>(arg10), _FORWARD_NAME_EACH_9(__VA_ARGS__)
#define _FORWARD_NAME_EACH_11(x, ...)   std::forward<x>(arg11), _FORWARD_NAME_EACH_10(__VA_ARGS__)
#define _FORWARD_NAME_EACH_12(x, ...)   std::forward<x>(arg12), _FORWARD_NAME_EACH_11(__VA_ARGS__)
#define _FORWARD_NAME_EACH_13(x, ...)   std::forward<x>(arg13), _FORWARD_NAME_EACH_12(__VA_ARGS__)
#define _FORWARD_NAME_EACH_14(x, ...)   std::forward<x>(arg14), _FORWARD_NAME_EACH_13(__VA_ARGS__)
#define _FORWARD_NAME_EACH_15(x, ...)   std::forward<x>(arg15), _FORWARD_NAME_EACH_14(__VA_ARGS__)
#define _FORWARD_NAME_EACH_16(x, ...)   std::forward<x>(arg16), _FORWARD_NAME_EACH_15(__VA_ARGS__)
#define _FORWARD_NAME_EACH_17(x, ...)   std::forward<x>(arg17), _FORWARD_NAME_EACH_16(__VA_ARGS__)
#define _FORWARD_NAME_EACH_18(x, ...)   std::forward<x>(arg18), _FORWARD_NAME_EACH_17(__VA_ARGS__)
#define _FORWARD_NAME_EACH_19(x, ...)   std::forward<x>(arg19), _FORWARD_NAME_EACH_18(__VA_ARGS__)
#define _FORWARD_NAME_EACH_20(x, ...)   std::forward<x>(arg20), _FORWARD_NAME_EACH_19(__VA_ARGS__)
#define _FORWARD_NAME_EACH_21(x, ...)   std::forward<x>(arg21), _FORWARD_NAME_EACH_20(__VA_ARGS__)
#define _FORWARD_NAME_EACH_22(x, ...)   std::forward<x>(arg22), _FORWARD_NAME_EACH_21(__VA_ARGS__)
#define _FORWARD_NAME_EACH_23(x, ...)   std::forward<x>(arg23), _FORWARD_NAME_EACH_22(__VA_ARGS__)
#define _FORWARD_NAME_EACH_24(x, ...)   std::forward<x>(arg24), _FORWARD_NAME_EACH_23(__VA_ARGS__)
#define _FORWARD_NAME_EACH_25(x, ...)   std::forward<x>(arg25), _FORWARD_NAME_EACH_24(__VA_ARGS__)
#define _FORWARD_NAME_EACH_26(x, ...)   std::forward<x>(arg26), _FORWARD_NAME_EACH_25(__VA_ARGS__)
#define _FORWARD_NAME_EACH_27(x, ...)   std::forward<x>(arg27), _FORWARD_NAME_EACH_26(__VA_ARGS__)
#define _FORWARD_NAME_EACH_28(x, ...)   std::forward<x>(arg28), _FORWARD_NAME_EACH_27(__VA_ARGS__)
#define _FORWARD_NAME_EACH_29(x, ...)   std::forward<x>(arg29), _FORWARD_NAME_EACH_28(__VA_ARGS__)
#define _FORWARD_NAME_EACH_30(x, ...)   std::forward<x>(arg30), _FORWARD_NAME_EACH_29(__VA_ARGS__)
#define _FORWARD_NAME_EACH_31(x, ...)   std::forward<x>(arg31), _FORWARD_NAME_EACH_30(__VA_ARGS__)
#define _FORWARD_NAME_EACH_32(x, ...)   std::forward<x>(arg32), _FORWARD_NAME_EACH_31(__VA_ARGS__)
#define _FORWARD_NAME_EACH_33(x, ...)   std::forward<x>(arg33), _FORWARD_NAME_EACH_32(__VA_ARGS__)
#define _FORWARD_NAME_EACH_34(x, ...)   std::forward<x>(arg34), _FORWARD_NAME_EACH_33(__VA_ARGS__)
#define _FORWARD_NAME_EACH_35(x, ...)   std::forward<x>(arg35), _FORWARD_NAME_EACH_34(__VA_ARGS__)
#define _FORWARD_NAME_EACH_36(x, ...)   std::forward<x>(arg36), _FORWARD_NAME_EACH_35(__VA_ARGS__)
#define _FORWARD_NAME_EACH_37(x, ...)   std::forward<x>(arg37), _FORWARD_NAME_EACH_36(__VA_ARGS__)
#define _FORWARD_NAME_EACH_38(x, ...)   std::forward<x>(arg38), _FORWARD_NAME_EACH_37(__VA_ARGS__)
#define _FORWARD_NAME_EACH_39(x, ...)   std::forward<x>(arg39), _FORWARD_NAME_EACH_38(__VA_ARGS__)
#define _FORWARD_NAME_EACH_40(x, ...)   std::forward<x>(arg40), _FORWARD_NAME_EACH_39(__VA_ARGS__)
#define _FORWARD_NAME_EACH_41(x, ...)   std::forward<x>(arg41), _FORWARD_NAME_EACH_40(__VA_ARGS__)
#define _FORWARD_NAME_EACH_42(x, ...)   std::forward<x>(arg42), _FORWARD_NAME_EACH_41(__VA_ARGS__)
#define _FORWARD_NAME_EACH_43(x, ...)   std::forward<x>(arg43), _FORWARD_NAME_EACH_42(__VA_ARGS__)
#define _FORWARD_NAME_EACH_44(x, ...)   std::forward<x>(arg44), _FORWARD_NAME_EACH_43(__VA_ARGS__)
#define _FORWARD_NAME_EACH_45(x, ...)   std::forward<x>(arg45), _FORWARD_NAME_EACH_44(__VA_ARGS__)
#define _FORWARD_NAME_EACH_46(x, ...)   std::forward<x>(arg46), _FORWARD_NAME_EACH_45(__VA_ARGS__)
#define _FORWARD_NAME_EACH_47(x, ...)   std::forward<x>(arg47), _FORWARD_NAME_EACH_46(__VA_ARGS__)
#define _FORWARD_NAME_EACH_48(x, ...)   std::forward<x>(arg48), _FORWARD_NAME_EACH_47(__VA_ARGS__)
#define _FORWARD_NAME_EACH_49(x, ...)   std::forward<x>(arg49), _FORWARD_NAME_EACH_48(__VA_ARGS__)
#define _FORWARD_NAME_EACH_50(x, ...)   std::forward<x>(arg50), _FORWARD_NAME_EACH_49(__VA_ARGS__)
#define _FORWARD_NAME_EACH_51(x, ...)   std::forward<x>(arg51), _FORWARD_NAME_EACH_50(__VA_ARGS__)
#define _FORWARD_NAME_EACH_52(x, ...)   std::forward<x>(arg52), _FORWARD_NAME_EACH_51(__VA_ARGS__)
#define _FORWARD_NAME_EACH_53(x, ...)   std::forward<x>(arg53), _FORWARD_NAME_EACH_52(__VA_ARGS__)
#define _FORWARD_NAME_EACH_54(x, ...)   std::forward<x>(arg54), _FORWARD_NAME_EACH_53(__VA_ARGS__)
#define _FORWARD_NAME_EACH_55(x, ...)   std::forward<x>(arg55), _FORWARD_NAME_EACH_54(__VA_ARGS__)
#define _FORWARD_NAME_EACH_56(x, ...)   std::forward<x>(arg56), _FORWARD_NAME_EACH_55(__VA_ARGS__)
#define _FORWARD_NAME_EACH_57(x, ...)   std::forward<x>(arg57), _FORWARD_NAME_EACH_56(__VA_ARGS__)
#define _FORWARD_NAME_EACH_58(x, ...)   std::forward<x>(arg58), _FORWARD_NAME_EACH_57(__VA_ARGS__)
#define _FORWARD_NAME_EACH_59(x, ...)   std::forward<x>(arg59), _FORWARD_NAME_EACH_58(__VA_ARGS__)
#define _FORWARD_NAME_EACH_60(x, ...)   std::forward<x>(arg60), _FORWARD_NAME_EACH_59(__VA_ARGS__)
#define _FORWARD_NAME_EACH_61(x, ...)   std::forward<x>(arg61), _FORWARD_NAME_EACH_60(__VA_ARGS__)
#define _FORWARD_NAME_EACH_62(x, ...)   std::forward<x>(arg62), _FORWARD_NAME_EACH_61(__VA_ARGS__)
#define _FORWARD_NAME_EACH_63(x, ...)   std::forward<x>(arg63), _FORWARD_NAME_EACH_62(__VA_ARGS__)
#define _FORWARD_NAME_EACH_64(x, ...)   std::forward<x>(arg64), _FORWARD_NAME_EACH_63(__VA_ARGS__)


// Automatically concatenate a list of variadic elements (up to 16)
#define ADD_PREFIX_EACH(prefix, ...)        _ADD_PREFIX_EACH(VA_ARGC(__VA_ARGS__), prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH(N, prefix, ...)    _CONCATENATE(_ADD_PREFIX_EACH_, N)(prefix __VA_OPT__(,) __VA_ARGS__)
#define _ADD_PREFIX_EACH_0(prefix)
#define _ADD_PREFIX_EACH_1(prefix, x)       _CONCATENATE_SECOND(prefix, x)
#define _ADD_PREFIX_EACH_2(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_1(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_3(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_2(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_4(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_3(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_5(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_4(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_6(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_5(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_7(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_6(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_8(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_7(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_9(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_8(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_10(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_9(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_11(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_10(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_12(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_11(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_13(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_12(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_14(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_13(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_15(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_14(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_16(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_15(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_17(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_16(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_18(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_17(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_19(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_18(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_20(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_19(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_21(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_20(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_22(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_21(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_23(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_22(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_24(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_23(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_25(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_24(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_26(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_25(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_27(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_26(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_28(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_27(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_29(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_28(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_30(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_29(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_31(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_30(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_32(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_31(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_33(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_32(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_34(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_33(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_35(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_34(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_36(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_35(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_37(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_36(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_38(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_37(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_39(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_38(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_40(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_39(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_41(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_40(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_42(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_41(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_43(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_42(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_44(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_43(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_45(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_44(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_46(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_45(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_47(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_46(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_48(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_47(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_49(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_48(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_50(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_49(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_51(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_50(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_52(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_51(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_53(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_52(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_54(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_53(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_55(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_54(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_56(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_55(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_57(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_56(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_58(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_57(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_59(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_58(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_60(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_59(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_61(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_60(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_62(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_61(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_63(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_62(prefix, __VA_ARGS__)
#define _ADD_PREFIX_EACH_64(prefix, x, ...) _CONCATENATE_SECOND(prefix, x) _ADD_PREFIX_EACH_63(prefix, __VA_ARGS__)

// Automatically concatenate a list of variadic elements (up to 16)
#define ADD_PREFIX_COMMA_EACH(prefix, ...)        _ADD_PREFIX_COMMA_EACH(VA_ARGC(__VA_ARGS__), prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH(N, prefix, ...)    _CONCATENATE(_ADD_PREFIX_COMMA_EACH_, N)(prefix __VA_OPT__(,) __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_0(prefix)
#define _ADD_PREFIX_COMMA_EACH_1(prefix, x)       _CONCATENATE_SECOND(prefix, x)
#define _ADD_PREFIX_COMMA_EACH_2(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_1(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_3(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_2(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_4(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_3(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_5(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_4(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_6(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_5(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_7(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_6(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_8(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_7(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_9(prefix, x, ...)  _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_8(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_10(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_9(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_11(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_10(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_12(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_11(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_13(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_12(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_14(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_13(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_15(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_14(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_16(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_15(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_17(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_16(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_18(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_17(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_19(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_18(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_20(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_19(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_21(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_20(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_22(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_21(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_23(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_22(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_24(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_23(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_25(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_24(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_26(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_25(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_27(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_26(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_28(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_27(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_29(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_28(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_30(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_29(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_31(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_30(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_32(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_31(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_33(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_32(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_34(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_33(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_35(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_34(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_36(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_35(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_37(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_36(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_38(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_37(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_39(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_38(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_40(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_39(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_41(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_40(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_42(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_41(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_43(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_42(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_44(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_43(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_45(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_44(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_46(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_45(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_47(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_46(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_48(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_47(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_49(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_48(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_50(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_49(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_51(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_50(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_52(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_51(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_53(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_52(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_54(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_53(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_55(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_54(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_56(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_55(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_57(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_56(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_58(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_57(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_59(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_58(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_60(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_59(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_61(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_60(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_62(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_61(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_63(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_62(prefix, __VA_ARGS__)
#define _ADD_PREFIX_COMMA_EACH_64(prefix, x, ...) _CONCATENATE_SECOND(prefix, x), _ADD_PREFIX_COMMA_EACH_63(prefix, __VA_ARGS__)
